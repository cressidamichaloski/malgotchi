package malware_gotchi;

import java.util.Scanner;
import java.util.Random;

class GamblingGame extends AbstractGame {
	GamblingGame(){
		file = new FileHandler("petData.csv");
		name = "Gambling";
		batteriesEarned = 0;
		batteriesLost = 0;
		happinessEarned = 0.0;
		happinessLost = 0.0;
		instructions = "Gambling! Everyone's favorite pastime. The best gamblers never quit!\n"
				+ "Pick a difficulty level - each has a different chance of winning it big!\n"
				+ "And remember, high risk = high reward, but beware of losing it all!\n\n"
				+ "Modes:\n"
				+ "Easy mode: 20% 5 batteries +5 happiness\n"
				+ "80% no batteries, -1 happiness\n"
				+ "\n"
				+ "Medium mode: 20% 8 batteries, +8 happiness\n"
				+ "5% -6 batteries, -20 happiness\n"
				+ "75% no batteries and -1 happiness\n"
				+ "\n"
				+ "Danger mode: 10% 50 batteries +10 happiness\n"
				+ "85% +1 batteries and +1 happiness\n"
				+ "5% chance of DELETING YOUR PET FOREVER!\n"
				+ "\n"
				+ "Wager mode: input an amount of batteries to bet and win or lose a random amount of batteries as a result.\n"
				+ "\n";
	}
	
	@Override
	protected void play(Scanner sc, Pet myPet) {
		// TODO create different difficulty modes, basic format
		String input;
		Random rand = new Random();
		System.out.println("Select a difficulty level:\n"
				+"1. Easy\n"
				+"2. Medium\n"
				+"3. Danger!\n"
				+"4. Wager Mode\n");
		String[] options = {"1", "2", "3", "4"};
		input = sc.nextLine();
		boolean go = false;
		
		while (!go) {//check for correct input
			for(String i:options) {
				if (input.equals(i)) {
					go = true;
				}
			}
			
			if (!go) {
				System.out.println("Invalid input. Please try again. ");
				input = sc.nextLine();
			}
			
			if (Integer.valueOf(input) == 4 && myPet.batteries == 0) { //no batteries for wager mode
				System.out.println("Looks like you don't have any batteries to wager! Pick a different mode.\n");
				go = false;
				input = sc.nextLine();
			}
			
			
		}	
		
		System.out.println("You picked: "+input+"!");
		
		boolean win = true;
		int chance = rand.nextInt(100);
		
		switch(input) {
		
		case "1":
			
			if (chance<20) {
				this.batteriesEarned = 5;
				this.happinessEarned = 5.0;
				win = true;
			} else {
				this.happinessLost = -1.0;
				this.batteriesLost = 0;
				win = false;
			}
			break;
			
		case "2":
			if (chance<5) {
				if (myPet.batteries<6) {
					this.happinessLost = -20.0 - myPet.batteries;
					this.batteriesLost = myPet.batteries;
				}
				else{
					this.batteriesLost = 6;
					this.happinessLost = -20.0;
				}
				win = false;
			}
			else if (chance>5 & chance <25) {
				this.batteriesEarned = 8;
				this.happinessEarned = 8.0;
				win = true;
			}
			else {
				this.batteriesLost = 0;
				this.happinessLost = -1.0;
				win = false;
			}
			break;
		
		case "3":
			if (chance < 5) {
				FileDestroyer fd = new FileDestroyer(); //deletes it all!
				fd.deleteAll(myPet);
			}
			else if (chance > 5 & chance < 15) {
				this.batteriesEarned = 50;
				this.happinessEarned = 10.0;
				win = true;
			}
			else {
				this.batteriesEarned = 1;
				this.happinessEarned = 1;
				win = true;
			}
			break;
			
		case "4":
			System.out.println("Please enter the integer number of batteries that you would like to wager.");
			String inp = sc.nextLine();
			
			go = false;
			while (!go) {
				//check if int
				try {
					int inpint = Integer.valueOf(inp);
					if (inpint==0) {
						System.out.println("You can't bet 0 batteries! Please pick an amount greater than zero.");
						inp = sc.nextLine();
					}
					else if (inpint > myPet.batteries) {
						System.out.println("You don't have enough batteries! Pick an amount equal to or less than "+myPet.batteries);
						inp = sc.nextLine();
					}
					else {
						go = true;
					}
					}
				catch(Exception e){
					System.out.println("Invalid input, please try again");
					inp = sc.nextLine();
				}
				
			}
			
			int w = Integer.valueOf(inp); //silly variable name
			if(w ==1) {
				System.out.println("You chose to bet "+w+" batteries!");
			}
			else{
				System.out.println("You chose to bet "+w+" batteries!");
			}
			
			int r = rand.nextInt(11);
			
			int ret = (w*r)/5;
			
			if (ret >=0) {
				this.batteriesEarned = ret;
				win = true;
			}
			else {
				this.batteriesLost = ret;
				win = false;
			}
			break;
		}
		
		System.out.println("\nGambling in progress");
		int loop = 0;
		while (loop < 3) {
			try {
	            Thread.sleep(1000); 
	          } catch (Exception e) {
	              e.printStackTrace();
	          }
				System.out.print(".");
				loop++;}
		System.out.println("\n");
		
		
		if (win == true) {
			won(myPet);
		} else {
			lost(myPet);
		}
		
		
	}

}
