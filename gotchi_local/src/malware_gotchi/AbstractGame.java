package malware_gotchi;
import java.util.Scanner;

public abstract class AbstractGame {

	private String name;
	private int batteriesEarned;
	private double happinessEarned;
	private double happinessLost;
	public String instructions;
	FileHandler file;

	/* add this to new game, it gets angry if i leave it here
	 * 	GameName(String save) {
		this.file = new FileHandler(save);
	}
	*/
	
	public Boolean menu(Scanner sc, Pet myPet) {
		Boolean exitToMain = false;
		Boolean exit = false;
		String[] options = {"1", "2", "3"};
    	String ansStr;
    	Boolean go;
    	do {
    	int ans; 
		System.out.println("Welcome to "+ this.getGameName() +"! What would you like to do?\n"
				+"1. View Instructions\n"
				+ "2. Play Game\n"
				+"3. Return to Game Menu\n");
		ansStr = sc.next();
        go = false;
        while(!go) {
        	for(String i:options) {
        		if(ansStr.equals(i)){
        			go = true;
        		}
        	}
        	if(!go) {
        		System.out.println("Invalid input. Please try again. ");
        		ansStr = sc.next();
        	}
        }
        
        ans = Integer.valueOf(ansStr);
    	switch(ans) {
    		case 1:
    			System.out.println(this.instructions);
	    		break;
    		
    		case 2:
    			this.play(myPet);
    			exitToMain = this.replay(sc, myPet);
    			exit = true;
    			
    		case 3:
    			exit = true;
    			break;
    		
    	}
    	}while (!exit);
	return exitToMain;
			}
    	
	public int getBatteriesEarned() {
		return batteriesEarned;
	}
	public String getGameName() {
		return name;
	}
	
	private void won(Pet myPet) {
		myPet.batteries += this.batteriesEarned;
		file.setBatteries(myPet.batteries);
		
		myPet.updateHappy(this.happinessEarned);
		file.setHappinessChange(myPet.getHappinessChange());
		myPet.waiting();
		
		System.out.println("You won the game! Your pet earned "+ this.batteriesEarned+" "
				+ "batteries and "+ this.happinessEarned+" happiness.\n");
	}
	private void lost(Pet myPet) {
		myPet.updateHappy(this.happinessLost);
		file.setHappinessChange(myPet.getHappinessChange());
		System.out.println("You lost the game! Your pet didnâ€™t earn any batteries and lost "+ this.happinessEarned+" happiness.\n");
	};
	private void play(Pet myPet) { //this is where the actually game stuff goes
		//temporary temp for win/lose funcs
		Boolean win = true;
		if (win == true) {
			won(myPet);
		} else {lost(myPet);
			}
	};
	
	private Boolean replay(Scanner sc, Pet myPet) {  //replay menu
		Boolean exit = false;
		Boolean exitToMain = false;
		String[] options = {"1", "2", "3"};
    	String ansStr;
    	Boolean go;
    	int ans; 
    	
		do{
		System.out.println("End of game! What would you like to do?\n"
				+"1. Play Again\n"
				+ "2. Return to Game Menu\n"
				+"3. Return to Main Menu\n");
		ansStr = sc.next();
        go = false;
        while(!go) {
        	for(String i:options) {
        		if(ansStr.equals(i)){
        			go = true;
        		}
        	}
        	if(!go) {
        		System.out.println("Invalid input. Please try again. ");
        		ansStr = sc.next();
        	}
        }
        
        ans = Integer.valueOf(ansStr);
    	switch(ans) {
    		case 1:
    			this.play(myPet);
	    		break;
    		
    		case 2:
    			exit = true;
    			break;
    			
    		case 3:
    			exit = true;
    			exitToMain = true;
    			break;
    		
    	}
    	}while(!exit);
		return exitToMain;
	}
}
